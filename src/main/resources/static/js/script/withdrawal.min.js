var businessRules;function customTableOptions(){let a=tableOptions();return a.order=[[4,"desc"]],a}function onLoad(){$.getJSON("/api/v1/user/"+currentUser.id,function(a){$("#walletAddress").val(a.walletAddress)}),$.getJSON("/api/v1/parameter/find-by-group-code/BUSINESS_RULES",function(a){businessRules=a,validate($("#withdrawalType").val())}),$("#withdrawalType").on("change",function(){validate($("#withdrawalType").val())})}function validate(a){$.get(`api/v1/wallet/total-withdrawal-profit/${currentUser.id}`,function(e){$.get(`api/v1/wallet/allowed-withdrawal-balance/${currentUser.id}/${a}`,function(t){let r=businessRules.find(a=>"MIN_WITHDRAW"==a.code).value??"15",n=businessRules.find(a=>"TRANSFER_FEE"==a.code).value??"2";$("#amount").attr("placeholder",`${r} ~ ${t}`),$("#withdraw-notice .alert-content ul").html(`<li>${resources.minWithdrawalNotice.format(r)}</li>
                                                          <li>${resources.maxWithdrawalNotice.format(t)}</li>
                                                          <li>${resources.totalWithdrawalProfit.format(e)}</li>                                                          
                                                          <li>${resources.transferFee.format(n)}</li>`),"WITHDRAWAL_PROFIT"==a?parseFloat(t)<parseFloat(businessRules.find(a=>"MIN_WITHDRAW"==a.code).value)?($("#saveWithdraw").addClass("disabled").attr("aria-disabled",!0).attr("disabled",!0),show_warning(`Withdrawal profit not allowed due to insufficient allowed amount <strong>${t} USD</strong>!`)):$("#saveWithdraw").removeClass("disabled").removeAttr("aria-disabled").removeAttr("disabled"):"WITHDRAWAL"==a&&(0>=parseInt(t)?($("#saveWithdraw").addClass("disabled").attr("aria-disabled",!0).attr("disabled",!0),show_warning(`Withdrawal not allowed due to insufficient allowed amount <strong>${t} USD</strong>!`)):$("#saveWithdraw").removeClass("disabled").removeAttr("aria-disabled").removeAttr("disabled"))})})}function loadSaveEntityByInput(){return{amount:$("#amount").val().replace(/,/g,""),actualAmount:$("#amount").val().replace(/,/g,""),network:$("#network").val(),currency:"USDT",transactionType:$("#withdrawalType").val(),user:{id:currentUser.id},address:$("#walletAddress").val()}}function loadSearchEntityByInput(){return{transactionTypes:["WITHDRAWAL","WITHDRAWAL_PROFIT"],userId:currentUser.id}}function clearAll_(){$("#amount","#walletAddress").val("")}function submitForm(a){let e=loadSaveEntityByInput();$.get(`api/v1/subscription-package/find-matched-plan/${currentUser.id}/${e.amount}`,function(a){isNullOrEmpty(a)?confirm(resources.subscriptionCanceled)&&submitEntity(e):"noChange"==a?submitEntity(e):confirm(resources.subscriptionDowngraded.format(a))&&submitEntity(e)})}function afterSubmitForm(a){currentUser.walletAddress=$("#walletAddress").val(),$.blockUI(blockUiOptions()),$(".btn-primary").attr("disabled","disabled"),$.ajax({type:"PATCH",url:"api/v1/user/"+currentUser.id,dataType:"json",contentType:"application/json;charset=utf-8",data:JSON.stringify(currentUser),success:function(a){$.unblockUI(),$(".btn-primary").removeAttr("disabled"),null==a.error?clearAll():show_error(a.error)},error:function(a,e,t){$.unblockUI(),$(".btn-primary").removeAttr("disabled"),isNullOrEmpty(get(()=>a.responseJSON))?show_error("ajax answer post returned error: "+t.responseText):a.responseJSON.status>=400&&a.responseJSON.status<500?show_warning(a.responseJSON.error+" ("+a.responseJSON.status+") <br>"+a.responseJSON.message):show_error(a.responseJSON.error+" ("+a.responseJSON.status+") <br>"+a.responseJSON.message)}}),$("#withdraw-alert").remove();let e=`<div id="withdraw-alert" class="alert alert-info">
    <button onclick="$('#withdraw-alert').hide()" class="close">&times;</button>
    <div class="alert-content">${resources.withdrawalAlert}</div>
    </div>`;$(".btn-primary").after(e)}function handleError(a){417==a.status&&0==$("#transaction-notice").length&&$("#withdraw-notice").after(`<div id="transaction-notice" class="col-12 alert alert-warning">
                                        <button onclick="$('#transaction-notice').hide()" class="close">&times;</button>
                                        <div class="alert-content">
                                            <i class="fa fa-warning" style="font-size:17px"></i>
                                            <ul style="margin: 0">
                                                <li>${a.message}</li>                                           
                                            </ul>
                                        </div>
                                    </div>`)}ajaxUrl="/api/v1/wallet",rules={walletAddress:{required:!0,validTronWallet:!0},currency:"required",amount:{required:!0,currency:["$",!1]}},messages={walletAddress:{required:resources.pleaseEnter.format(resources.amount),validTronWallet:resources.invalidFormat.format(resources.wallet)},currency:resources.pleaseEnter.format(resources.currency),amount:{required:resources.pleaseEnter.format(resources.amount),currency:resources.invalidFormat.format(resources.amount)}},columns=[{data:"network"},{data:"amount",render:function(a){return addPeriod(a)}},{data:"transactionType"},{data:"status",render:function(a){return`<span class="${"Active"==a?"green":"red"}">${a}</span>`}},{data:"modifiedDate",render:function(a){return toLocalizingDateString(a,!0)}}];